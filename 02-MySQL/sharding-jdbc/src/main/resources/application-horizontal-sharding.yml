mode:
  type: Standalone
  repository:
    type: JDBC
dataSources:
  user_ds:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3315/db_user?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: root
  order_ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3318/db_order?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: root
  order_ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3319/db_order?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: root
#rules:
#  - !SHARDING
#    tables:
#      t_order:
#        actualDataNodes: order_ds_0.t_order0
# 水平分库配置
#rules:
#  - !SHARDING
#    tables:
#      t_user:
#        actualDataNodes: user_ds.t_user
#      t_order:
#        actualDataNodes: order_ds_${0..1}.t_order0
#        databaseStrategy:
#          standard:
#            shardingColumn: user_id
#            shardingAlgorithmName: userid_inline
#
#    shardingAlgorithms:
#      userid_inline:
#        type: INLINE
#        props:
#          algorithm-expression: order_ds_${user_id % 2}
# 水平分表配置
#rules:
#  - !SHARDING
#    tables:
#      t_user:
#        actualDataNodes: user_ds.t_user
#      t_order:
#        actualDataNodes: order_ds_${0..1}.t_order${0..1}
#        databaseStrategy:
#          standard:
#            shardingColumn: user_id
#            shardingAlgorithmName: userid_inline
#        tableStrategy:
#          standard:
#            shardingColumn: id
#            shardingAlgorithmName: orderid_inline
#
#    shardingAlgorithms:
#      userid_inline:
#        type: INLINE
#        props:
#          algorithm-expression: order_ds_${user_id % 2}
#      orderid_inline:
#        type: INLINE
#        props:
#          algorithm-expression: t_order${id % 2}

rules:
  - !SHARDING
    tables:
      t_user:
        actualDataNodes: user_ds.t_user
      t_order:
        actualDataNodes: order_ds_${0..1}.t_order${0..1}
        databaseStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: userid_inline
        tableStrategy:
          standard:
            shardingColumn: id
            shardingAlgorithmName: orderid_inline
      t_order_item:
        actualDataNodes: order_ds_${0..1}.t_order_item${0..1}
        databaseStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: userid_inline
        tableStrategy:
          standard:
            shardingColumn: order_id
            shardingAlgorithmName: orderid_item_inline

    shardingAlgorithms:
      userid_inline:
        type: INLINE
        props:
          algorithm-expression: order_ds_${user_id % 2}
      orderid_inline:
        type: INLINE
        props:
          algorithm-expression: t_order${id % 2}
      orderid_item_inline:
        type: INLINE
        props:
          algorithm-expression: t_order_item${order_id % 2}

props:
  sql-show: true